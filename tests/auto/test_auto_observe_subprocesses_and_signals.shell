if ! type strace; then exit 0; fi

. ./assert.sh
export OTEL_SHELL_CONFIG_OBSERVE_SUBPROCESSES=TRUE
export OTEL_SHELL_CONFIG_OBSERVE_SIGNALS=TRUE
. otel.sh

sudo apt-get update

resolve_span '.name == "sudo apt-get update"'
# \sleep 30
# \cat "$OTEL_EXPORT_LOCATION"

assert_equals 0 "$(\cat "$OTEL_EXPORT_LOCATION" | \jq '. | select(.name != null) | .events[] | select(.name | startswith("SIG") | not) | .name' | \wc -l)"
assert_equals 0 "$(\cat "$OTEL_EXPORT_LOCATION" | \jq '. | select(.name != null) | select(.name | contains("execve(")) | .name' | \wc -l)"
\cat "$OTEL_EXPORT_LOCATION" | \jq -r '. | select(.name != null) | .name' | \cut -d ' ' -f 1 | while read -r command; do
  assert_not_equals "" "$(\which "$command")"
done

\cat "$OTEL_EXPORT_LOCATION" | \jq -r '. | select(.name != null) | .context.span_id' | while read -r span_id; do
  span="$(\cat "$OTEL_EXPORT_LOCATION" | \jq '. | select(.context.span_id == "'"$span_id"'")')"
  while \[ -n "$span" ] && \[ "$(\printf '%s' "$span" | \jq -r '.name')" != "sudo apt-get update" ]; do
    span_id="$(\printf '%s' "$span" | \jq -r '.parent_id')"
    span="$(\cat "$OTEL_EXPORT_LOCATION" | \jq '. | select(.context.span_id == "'"$span_id"'")')"
  done
  \[ -n "$span" ] || (\echo FAILED && \echo "FAILED tracing $span_id" >&2)
done | \grep 'FAILED' && exit 1 || exit 0
