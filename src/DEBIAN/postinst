#!/bin/bash -e
rm -rf /opt/opentelemetry_bash &> /dev/null || true # clean the old install directory
if [ "$1" = 'abort-configure' ] || [ "$1" = 'abort-upgrade' ] || [ "$1" = 'abort-remove' ] || [ "$1" = 'abort-deconfigure' ]; then
  true
elif [ "$1" = 'triggered' ] || [ "$1" = 'reconfigure' ]; then
  true
elif [ "$1" = 'configure' ]; then
  python3 -m venv /opt/opentelemetry_shell/venv
  source /opt/opentelemetry_shell/venv/bin/activate
  pip3 install -r /opt/opentelemetry_shell/requirements.txt
  deactivate
  export PATH="$PATH":/usr/local/bin
  if type npm; then
    set -x
    cache="$(npm config list -l | grep -E '^cache = ' | cut -d '=' -f 2- | tr -d '" ')"
    user="$(echo "$cache" | rev | cut -d / -f 2- | rev | xargs stat -c '%U')"
    # ls -a | grep -vE ^.$ | grep -vE ^..$ | xargs stat -c '%U %N' | grep -vE '^'"$user" | cut -d ' ' -f 2- | tr -d "'" | xargs chown "$user"
    ls -a | grep -vE ^.$ | grep -vE ^..$ | xargs chown "$user"
    cache="$(runuser -l "$user" -c 'npm config list -l' | grep -E '^cache = ' | cut -d '=' -f 2- | tr -d '" ')"
    runuser -l "$user" -c 'npm config set cache="$1"' runuser "$(mktemp -d)"
    (cd /usr/share/opentelemetry_shell && npm install --package-lock=false)
    runuser -l "$user" -c 'npm config set cache="$1"' runuser "$cache"
    set +x
  else
    true
  fi
else
  exit 1
fi
