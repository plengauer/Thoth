#!/bin/sh -e
rm -rf /opt/opentelemetry_bash 1> /dev/null 2> /dev/null || true # clean the old install directory
if [ "$1" = 0 ] || [ "$1" = 1 ] || [ "$1" = 2 ]; then set -- configure; fi
if [ "$1" = 'abort-configure' ] || [ "$1" = 'abort-upgrade' ] || [ "$1" = 'abort-remove' ] || [ "$1" = 'abort-deconfigure' ]; then
  true
elif [ "$1" = 'configure' ] || [ "$1" = 'triggered' ] || [ "$1" = 'reconfigure' ]; then
  export HOME="$(eval "echo ~$(whoami)")"
  if ! [ -d /opt/opentelemetry_shell/venv ] || [ "${OTEL_SHELL_CONFIG_INSTALL_ASSUME:-FALSE}" = FALSE ]; then
    python3 -m venv /opt/opentelemetry_shell/venv
    . /opt/opentelemetry_shell/venv/bin/activate
    pip3 install -r /opt/opentelemetry_shell/requirements.txt
    pip3 check
    deactivate # SKIP_DEPENDENCY_CHECK
  fi
  if type node; then
    unzip /usr/share/opentelemetry_shell/agent.instrumentation.node/node_modules.zip -d /usr/share/opentelemetry_shell/agent.instrumentation.node/
    ls /usr/share/opentelemetry_shell/agent.instrumentation.node | grep -v '.js$' | while read -r directory; do
      ls /usr/share/opentelemetry_shell/agent.instrumentation.node | grep '.js$' | while read -r file; do
        ln --symbolic ../"$file" /usr/share/opentelemetry_shell/agent.instrumentation.node/"$directory"/"$file"
      done
    done
  fi
  if type python3; then
    unzip /usr/share/opentelemetry_shell/agent.instrumentation.python/python_site_packages.zip -d /usr/share/opentelemetry_shell/agent.instrumentation.python/
  fi
else
  exit 1
fi
