name: 'OpenTelemetry Jobs'
description: 'Automatically Deploy OpenTelemetry for GitHub Actions to all workflows'
branding:
  icon: 'activity'
  color: 'blue'
runs:
  using: composite
  steps:
    - name: "Install dependencies"
      shell: bash
      run: type yq || (sudo apt-get update && sudo apt-get install yq)
    - name: "Checkout"
      uses: actions/checkout@v4
      with:
        token: ${{ inputs.github_token }}
    - name: "Find workflow-level observability"
      id: find-workflow-level-instrumentation
      shell: bash
      run: |
        for workflow_file in "${{ inputs.workflows_directory }}"/*.yaml "${{ inputs.workflows_directory }}"/*.yml; do
          cat "$workflow_file" | yq .jobs.*.steps[].uses | grep /actions/instrument/job && echo path="$workflow_file" >> "$GITHUB_OUTPUT && break || true
        done
    - name: "Deploy workflow-level observability"
      if: steps.find-workflow-level-instrumentation.outputs.path == null
      shell: bash
      run: |
        echo "${{ inputs.workflow_level_instrumentation_template }}" > "${{ steps.find-workflow-level-instrumentation.outputs.path }}"
    - name: "Update workflow-level observability triggers"
      if: steps.find-workflow-level-instrumentation.outputs.path != null
      shell: bash
      run: |
        names_file="$(mktemp)"
        for workflow_file in .github/workflows/*.yaml .github/workflows/*.yml; do
          cat "$workflow_file" | yq .name
        done \
          | ([ -n "${{ inputs.workflow_level_instrumentation_exclude }}" ] && grep -vF "$(echo "${{ inputs.workflow_level_instrumentation_exclude }}" | tr ',' '\n' | tr ':' '\n' | tr ';' '\n')" || cat) \
          | grep -vF "$(cat '${{ steps.find-workflow-level-instrumentation.outputs.path }}' | yq .name)"
        # TODO fill in names as array
    - name: "Deploy job-level observability"
      shell: bash
      run: |
        # TODO every workflow file, that is not workflow-level instrumentation, check if label is supported and not excluded and deploy
        echo hello world
    - name: "Open Pull Request"
      id: open-pr
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ inputs.github_token }}
        branch: "deploy-otel"
        commit-message: "Deploy OpenTelemetry"
        title: "Deploy OpenTelemetry"
        body: |
          This PR deploys workflow-level and job-level OpenTelemetry instrumentation to every workflow.
          (this PR is automatically generated)
        delete-branch: true
    - name: "Delay" # to let the api and PR state catch up ...
      if: steps.open-pr.outputs.pull-request-number != null
      shell: bash
      run: sleep 60
      if: steps.open-pr.outputs.pull-request-number != null
    - name: "Enable auto-merge"
      if: steps.open-pr.outputs.pull-request-number != null
      uses: peter-evans/enable-pull-request-automerge@v3
      with:
        token: ${{ inputs.github_token }}
        pull-request-number: ${{ steps.open-pr.outputs.pull-request-number }}
        merge-method: squash
inputs:
  github_token:
    description: 'A GitHub token for API access (read/write)'
    default: '${{ github.token }}'
  workflows_directory:
    default: '.github/workflows'
  workflow_level_instrumentation_file_name:
    default: 'observability.yaml'
  workflow_level_instrumentation_exclude:
    default: ''
  job_level_instrumentation_exclude:
    default: ''
  debug:
    description: 'Enable debug logging'
    default: ${{ runner.debug }}
