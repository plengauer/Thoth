name: 'Workflow Example'
on:
  schedule:
    - cron: '0 0 * * *'
  push:
    paths: .github/workflows/workflow_example.yaml
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: none
      actions: read
    steps:
      - uses: plengauer/opentelemetry-github/actions/instrument/job@v5.22.7
        with:
          secrets_to_redact: '["${{ github.token }}"]'
        env:
          OTEL_EXPORTER_OTLP_ENDPOINT: '${{ secrets.OTEL_EXPORTER_OTLP_ENDPOINT }}'
          OTEL_EXPORTER_OTLP_HEADERS: '${{ secrets.OTEL_EXPORTER_OTLP_HEADERS }}'
      - run: echo 'hello world, im a compiler (deeply injected), i sometimes fail'
      - run: |
          [ "$GITHUB_RUN_ATTEMPT" != 1 ] || (echo "::error ::rate limit exceeded" && false)
  test:
    needs: build
    strategy:
      matrix:
        name: ['foo', 'bar', 'baz']
    runs-on: ubuntu-latest
    permissions:
      contents: none
      actions: read
    steps:
      - run: echo 'hello world, im a test (not injected)'
  publish:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: none
      actions: read
    steps:
      - run: echo 'hello world, im a publisher (not injected)'
  name-with_special-characters:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: none
      actions: read
    steps:
      - run: echo 'hello world, im a job with some special characters (not injected)'
  job-with-name:
    name: 'job-with(a)special[name]with.special&characters'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: none
      actions: read
    steps:
      - run: echo 'hello world, im a job with custom name (not injected)'
  job-with-python-producing-utf-log:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: none
      actions: read
    steps:
      - run: python -m venv venv && . venv/bin/activate && pip3 install opentelemetry-api && deactivate
  job-with-npm-producing-utf-log:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: none
      actions: read
    steps:
      - run: npm install @opentelemetry/api
