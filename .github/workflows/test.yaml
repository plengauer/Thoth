name: Build

on:
  workflow_call:

jobs:
  _build:
    uses: ./.github/workflows/build.yaml

  package:
    needs: _build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: sudo apt-get -y install ./package.deb
      - run: sudo apt-get -y remove opentelemetry-shell

  smoke:
    needs: _build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: sudo apt-get -y install ./package.deb
      - run: bash -c "cd tests && sudo bash run_tests.sh bash"

  debian-stable-oldest-sh:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh debian:oldstable sh"

  debian-stable-oldest-ash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh debian:oldstable ash"

  debian-stable-oldest-dash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh debian:oldstable dash"

  debian-stable-oldest-bash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh debian:oldstable bash"

  debian-stable-latest-sh:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh debian:stable sh"

  debian-stable-latest-ash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh debian:stable ash"

  debian-stable-latest-dash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh debian:stable dash"

  debian-stable-latest-bash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh debian:stable bash"

  debian-testing-sh:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh debian:testing sh"

  debian-testing-ash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh debian:testing ash"

  debian-testing-dash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh debian:testing dash"

  debian-testing-bash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh debian:testing bash"

  debian-unstable-sh:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh debian:unstable sh"

  debian-unstable-ash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh debian:unstable ash"

  debian-unstable-dash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh debian:unstable dash"

  debian-unstable-bash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh debian:unstable bash"

  ubuntu-stable-oldest-sh:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh ubuntu:focal sh"

  ubuntu-stable-oldest-ash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh ubuntu:focal ash"

  ubuntu-stable-oldest-dash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh ubuntu:focal dash"

  ubuntu-stable-oldest-bash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh ubuntu:focal bash"

  ubuntu-stable-latest-sh:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh ubuntu:latest sh"

  ubuntu-stable-latest-ash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh ubuntu:latest ash"

  ubuntu-stable-latest-dash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh ubuntu:latest dash"

  ubuntu-stable-latest-bash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh ubuntu:latest bash"

  ubuntu-testing-sh:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh ubuntu:rolling sh"

  ubuntu-testing-ash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh ubuntu:rolling ash"

  ubuntu-testing-dash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh ubuntu:rolling dash"

  ubuntu-testing-bash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh ubuntu:rolling bash"

  ubuntu-unstable-sh:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh ubuntu:devel sh"

  ubuntu-unstable-ash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh ubuntu:devel ash"

  ubuntu-unstable-dash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh ubuntu:devel dash"

  ubuntu-unstable-bash:
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: mv ./package.deb tests
      - run: sudo apt-get update
      - run: sudo apt-get remove -y containerd.io
      - run: sudo apt-get install -y docker.io runc
      - run: bash -c "cd tests && bash run_tests_containerized.sh ubuntu:devel bash"

  debian:
    needs: [debian-stable-oldest-sh, debian-stable-oldest-ash, debian-stable-oldest-dash, debian-stable-oldest-bash, debian-stable-latest-sh, debian-stable-latest-ash, debian-stable-latest-dash, debian-stable-latest-bash, debian-testing-sh, debian-testing-ash, debian-testing-dash, debian-testing-bash]
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
        if: ${{ failure() }}

  ubuntu:
    needs: [ubuntu-stable-oldest-sh, ubuntu-stable-oldest-ash, ubuntu-stable-oldest-dash, ubuntu-stable-oldest-bash, ubuntu-stable-latest-sh, ubuntu-stable-latest-ash, ubuntu-stable-latest-dash, ubuntu-stable-latest-bash, ubuntu-testing-sh, ubuntu-testing-ash, ubuntu-testing-dash, ubuntu-testing-bash]
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
        if: ${{ failure() }}

  sh:
    needs: [debian-stable-oldest-sh, debian-stable-latest-sh, debian-testing-sh, ubuntu-stable-oldest-sh, ubuntu-stable-latest-sh, ubuntu-testing-sh]
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
        if: ${{ failure() }}

  ash:
    needs: [debian-stable-oldest-ash, debian-stable-latest-ash, debian-testing-ash, ubuntu-stable-oldest-ash, ubuntu-stable-latest-ash, ubuntu-testing-ash]
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
        if: ${{ failure() }}

  dash:
    needs: [debian-stable-oldest-dash, debian-stable-latest-dash, debian-testing-dash, ubuntu-stable-oldest-dash, ubuntu-stable-latest-dash, ubuntu-testing-dash]
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
        if: ${{ failure() }}

  bash:
    needs: [debian-stable-oldest-bash, debian-stable-latest-bash, debian-testing-bash, ubuntu-stable-oldest-bash, ubuntu-stable-latest-bash, ubuntu-testing-bash]
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
        if: ${{ failure() }}

  shell:
    needs: [sh, ash, dash, bash]
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
        if: ${{ failure() }}

  os:
    needs: [debian, ubuntu]
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
        if: ${{ failure() }}

  all:
    needs: [package, shell, os]
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
        if: ${{ failure() }}

