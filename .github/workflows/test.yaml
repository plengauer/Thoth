name: Test
on:
  push:
    branches:
      - '**'
  workflow_call:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    permissions:
      actions: read
      contents: read
    uses: ./.github/workflows/build.yaml
    secrets: inherit
  shell:
    needs: build
    permissions:
      actions: read
      contents: read
    uses: ./.github/workflows/test_shell.yaml
    secrets: inherit
  github:
    needs: build
    permissions:
      actions: read
      attestations: none
      checks: none
      contents: read
      deployments: none
      discussions: none
      id-token: none
      issues: none
      # models: none
      packages: read
      pages: none
      pull-requests: none
      security-events: none
      statuses: none
    uses: ./.github/workflows/test_github.yaml
    secrets: inherit
  join:
    needs: [shell, github]
    runs-on: ubuntu-latest
    outputs:
      success: ${{ steps.tests.outputs.success }}
    permissions:
      contents: none
      actions: read
    steps:
      - uses: plengauer/opentelemetry-github/actions/instrument/job@v5.27.0
        env:
          OTEL_EXPORTER_OTLP_ENDPOINT: ${{ secrets.OTEL_EXPORTER_OTLP_ENDPOINT }}
          OTEL_EXPORTER_OTLP_HEADERS: ${{ secrets.OTEL_EXPORTER_OTLP_HEADERS }}
        with:
          secrets_to_redact: '["${{ github.token }}"]'
      - id: tests
        run: echo "success=true" >> "$GITHUB_OUTPUT"
  all:
    if: ${{ always() }} # this is because we need this to fail and not skipped to avoid PRs getting merged without this passing
    needs: join
    runs-on: ubuntu-latest
    permissions:
      contents: none
      actions: read
    steps:
      - uses: plengauer/opentelemetry-github/actions/instrument/job@v5.27.0
        env:
          OTEL_EXPORTER_OTLP_ENDPOINT: ${{ secrets.OTEL_EXPORTER_OTLP_ENDPOINT }}
          OTEL_EXPORTER_OTLP_HEADERS: ${{ secrets.OTEL_EXPORTER_OTLP_HEADERS }}
        with:
          secrets_to_redact: '["${{ github.token }}"]'
      - env:
          SUCCESS: ${{ needs.join.outputs.success }}
        run: |
          [ "$SUCCESS" = 'true' ]
