name: Demo

on:
  workflow_call:
  push:
#    branches: main

jobs:
  demo-prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.demos.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - run: |
          cd demos && echo */ | tr ' ' '\n' | jq -nR '{"include": [inputs | select(length > 0) | {demo_directory: .}]}' | tr -d '\n' | xargs -0 -I {} echo 'matrix={}' >> "$GITHUB_OUTPUT"
        id: demos

  demo-generate:
    needs: demo-prepare
    runs-on: ubuntu-latest
    strategy: 
      matrix: ${{ fromJSON(needs.demo-prepare.outputs.matrix) }}
    steps:
      - run: wget -O - https://raw.githubusercontent.com/plengauer/opentelemetry-bash/main/INSTALL.sh | sh
      - uses: actions/checkout@v4
      - run: |
          set +o pipefail
          cd demos/${{ matrix.demo_directory }}
          
          export OTEL_METRICS_EXPORTER=console
          export OTEL_LOGS_EXPORTER=console
          export OTEL_TRACES_EXPORTER=console
          export OTEL_SHELL_SDK_OUTPUT_REDIRECT="$(mktemp -u)"
          otlp="$(mktemp)"
          stdout="$(mktemp)"
          stderr="$(mktemp)"
          mkfifo "$OTEL_SHELL_SDK_OUTPUT_REDIRECT"
          while true; do cat "$OTEL_SHELL_SDK_OUTPUT_REDIRECT" >> "$otlp"; done &
          pid="$!"
          bash -e ./demo.sh 1> "$stdout" 2> "$stderr" || true
          kill -9 "$pid"
          wait

          convert_span_id_to_name() {
            cat "$otlp" | jq -r '. | select(.context.span_id == "'"$1"'") | .name'
          }

          get_root_span_id() {
            cat "$otlp" | jq -r '. | select(.parent_id == null) | .context.span_id'
          }

          get_child_span_ids() {
            cat "$otlp" | jq -r '. | select(.parent_id == "'"$1"'") | .context.span_id'
          }

          print_span_name_tree() {
            local span_id="$1"
            local indent="$2"
            printf '%s' "$indent"; convert_span_id_to_name "$span_id"
            get_child_span_ids "$span_id" | while read -r child_span_id; do
              print_span_name_tree "$child_span_id" "$indent  "
            done
          }

          {
            echo '# Demo "'"$(cat ./meta.json | jq -r .title)"'"'
            cat ./meta.json | jq -r .description
            echo '## Script'
            echo '´´´sh'
            cat ./demo.sh
            echo '´´´'
            echo '## Standard Out'
            echo '´´´'
            cat "$stdout"
            echo '´´´'
            echo '## Standard Error'
            echo '´´´'
            cat "$stderr"
            echo '´´´'
            echo '## Trace Overview'
            echo '´´´'
            print_span_name_tree "$(get_root_span_id)" ""
            echo '´´´'
            echo '## Full OTLP Data'
            echo '´´´json'
            cat "$otlp"
            echo '´´´'
          } > README.md
      - run: demos/${{ matrix.demo_directory }}/README.md
      - run: |
          cd demos/${{ matrix.demo_directory }}
          git add --intent-to-add README.md
          git diff
          git diff | grep -v '^+++' | grep -v '^---' | grep -v _id | grep -v _time | grep -v github. | grep -v .ip | grep -q '^+' && echo dirty=true >> "$GITHUB_OUTPUT" || true
        id: diff
      - name: "Resolve Reviewers"
        if: steps.diff.outputs.dirty
        id: reviewers
        run: |
          if ! [ -f .github/renovate.json ]; then exit 0; fi
          echo "reviewers=$(cat .github/renovate.json | jq -r '.reviewers | join(",")')" >> "$GITHUB_OUTPUT"
      - name: "Open Pull Request"
        if: steps.diff.outputs.dirty
        id: open-pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
          commit-message: "Update demo"
          branch: "demos/${{ matrix.demo_directory }}"
          title: "Update demo"
          body: |
            (this PR is automatically generated)
          reviewers: ${{ steps.reviewers.outputs.reviewers }}
          delete-branch: true
      - uses: peter-evans/enable-pull-request-automerge@v3
        if: steps.open-pr.outputs.pull-request-number != null
        with:
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
          pull-request-number: ${{ steps.open-pr.outputs.pull-request-number }}
          merge-method: squash
