name: Renovate
on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:
concurrency:
  group: renovate
jobs:
  renovate:
    runs-on: ubuntu-latest
    permissions:
      contents: none
      actions: read
    steps:
      - uses: plengauer/opentelemetry-github/actions/instrument/job@v5.21.0
        with:
          secrets_to_redact: '["${{ github.token }}","${{ secrets.ACTIONS_GITHUB_TOKEN }}"]'
        env:
          OTEL_EXPORTER_OTLP_ENDPOINT: '${{ secrets.OTEL_EXPORTER_OTLP_ENDPOINT }}'
          OTEL_EXPORTER_OTLP_HEADERS: '${{ secrets.OTEL_EXPORTER_OTLP_HEADERS }}'
      - uses: renovatebot/github-action@v43.0.4
        env:
          RENOVATE_REPOSITORIES: ${{ github.repository }}
        with:
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
  renovate-python-dependency:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4.2.2
      - run: |
          python3 -m venv venv
          . venv/bin/activate
          pip3 install -r src/opt/opentelemetry_shell/requirements.txt
          deactivate
          min_version_otel="$(cat venv/lib/python*/site-packages/opentelemetry_api-*.dist-info/METADATA | grep '^Requires-Python: ' | cut -d ' ' -f 2 | cut -d . -f 2-)"
          min_version_shell="$(cat src/DEBIAN/control | grep '^Pre-Depends:' | tr ',' '\n' | grep -F -- 'python3 (>=' | cut -d '(' -f 2- | cut -d ')' -f 1 | cut -d ' ' -f 2 | cut -d . -f 2)"
          [ "$min_version_shell" -ge "$min_version_otel" ] || sed -i "s/python3 (>= $min_version_shell/python3 (>= $min_version_otel/g" src/DEBIAN/control
          rm -rf venv
      - id: open-pr
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
          commit-message: "Renove python dependency"
          base: main
          branch: "renovate-manual/debian-python"
          title: "Renovate Debian Python"
          body: |
            (this PR is automatically generated)
          delete-branch: true
      - run: sleep 60 # make sure PR state is updated and API can catch up
        if: steps.open-pr.outputs.pull-request-number != null
      - uses: peter-evans/enable-pull-request-automerge@v3.0.0
        if: steps.open-pr.outputs.pull-request-number != null
        with:
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
          pull-request-number: ${{ steps.open-pr.outputs.pull-request-number }}
          merge-method: squash
  renovate-test-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4.2.2
      - run: |
          curl -s https://api.launchpad.net/devel/debian/series > /tmp/launchpad.debian.json
          oldest="$(jq < /tmp/launchpad.debian.json '.entries[] | select(.active == true) | select(.status == "Supported") | .name' -r | head -n 2 | tail -n 1)"
          stable="$(jq < /tmp/launchpad.debian.json '.entries[] | select(.active == true) | select(.status == "Supported") | .name' -r | head -n 1)"
          latest="$(jq < /tmp/launchpad.debian.json '.entries[] | select(.active == true) | select(.status == "Current Stable Release") | .name' -r)"
          dev="$(jq < /tmp/launchpad.debian.json '.entries[] | select(.active == true) | select(.status == "Active Development") | .name' -r | head -n 1)"
          cat .github/workflows/images.json | jq ".debian.oldest = \"$oldest\"" | jq ".debian.stable = \"$stable\"" | jq ".debian.latest = \"$latest\"" | jq ".debian.dev = \"$dev\"" > /tmp/images.json && cat < /tmp/images.json > .github/workflows/images.json
      - run: |
          curl -s https://api.launchpad.net/devel/ubuntu/series > /tmp/launchpad.ubuntu.json
          oldest="$(jq < /tmp/launchpad.ubuntu.json '.entries[] | select(.active == true) | select(.status == "Supported") | .name' -r | head -n 2 | tail -n 1)"
          stable="$(jq < /tmp/launchpad.ubuntu.json '.entries[] | select(.active == true) | select(.status == "Supported") | .name' -r | head -n 1)"
          latest="$(jq < /tmp/launchpad.ubuntu.json '.entries[] | select(.active == true) | select(.status == "Current Stable Release") | .name' -r)"
          dev="$(jq < /tmp/launchpad.ubuntu.json '.entries[] | select(.active == true) | select(.status == "Active Development") | .name' -r | head -n 1)"
          cat .github/workflows/images.json | jq ".ubuntu.oldest = \"$oldest\"" | jq ".ubuntu.stable = \"$stable\"" | jq ".ubuntu.latest = \"$latest\"" | jq ".ubuntu.dev = \"$dev\"" > /tmp/images.json && cat < /tmp/images.json > .github/workflows/images.json
      - run: |
          curl -s https://fedoraproject.org/releases.json > /tmp/fedora_releases.json
          oldest="$(jq < /tmp/fedora_releases.json '.[].version' -r | sort -u | tail -n 2 | head -n 1)"
          stable="$(jq < /tmp/fedora_releases.json '.[].version' -r | sort -u | tail -n 1)"
          latest="$stable"
          dev=rawhide
          cat .github/workflows/images.json | jq ".fedora.oldest = \"$oldest\"" | jq ".fedora.stable = \"$stable\"" | jq ".fedora.latest = \"$latest\"" | jq ".fedora.dev = \"$dev\"" > /tmp/images.json && cat < /tmp/images.json > .github/workflows/images.json
      - id: open-pr
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
          commit-message: "Renove python dependency"
          base: main
          branch: "renovate-manual/test-images"
          title: "Renovate Debian Python"
          body: |
            (this PR is automatically generated)
          delete-branch: true
      - run: sleep 60 # make sure PR state is updated and API can catch up
        if: steps.open-pr.outputs.pull-request-number != null
      - uses: peter-evans/enable-pull-request-automerge@v3.0.0
        if: steps.open-pr.outputs.pull-request-number != null
        with:
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
          pull-request-number: ${{ steps.open-pr.outputs.pull-request-number }}
          merge-method: squash
