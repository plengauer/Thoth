name: Renovate
on:
  schedule:
    - cron: '0 * * * *'
  release:
    types: published
concurrency:
  group: renovate
jobs:
  renovate-dependencies:
    runs-on: ubuntu-latest
    permissions:
      contents: none
      actions: read
    steps:
      - uses: plengauer/opentelemetry-github/actions/instrument/job@v5.30.1
        with:
          secrets_to_redact: '["${{ github.token }}","${{ secrets.ACTIONS_GITHUB_TOKEN }}"]'
        env:
          OTEL_EXPORTER_OTLP_ENDPOINT: '${{ secrets.OTEL_EXPORTER_OTLP_ENDPOINT }}'
          OTEL_EXPORTER_OTLP_HEADERS: '${{ secrets.OTEL_EXPORTER_OTLP_HEADERS }}'
      - uses: renovatebot/github-action@v43.0.15
        env:
          RENOVATE_REPOSITORIES: ${{ github.repository }}
        with:
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
  renovate-package-dependency-python:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    steps:
      - uses: plengauer/opentelemetry-github/actions/instrument/job@v5.30.1
        env:
          OTEL_EXPORTER_OTLP_ENDPOINT: ${{ secrets.OTEL_EXPORTER_OTLP_ENDPOINT }}
          OTEL_EXPORTER_OTLP_HEADERS: ${{ secrets.OTEL_EXPORTER_OTLP_HEADERS }}
        with:
          secrets_to_redact: '["${{ github.token }}","${{ secrets.ACTIONS_GITHUB_TOKEN }}"]'
      - uses: actions/checkout@v5.0.0
      - run: |
          python3 -m venv venv
          . venv/bin/activate
          pip3 install -r src/opt/opentelemetry_shell/requirements.txt
          deactivate
          min_version_otel="$(cat venv/lib/python*/site-packages/opentelemetry_api-*.dist-info/METADATA | grep '^Requires-Python: ' | cut -d ' ' -f 2 | cut -d . -f 2)"
          rm -rf venv
          min_version_debian="$(cat meta/debian/control | grep '^Pre-Depends:' | tr ',' '\n' | grep -F -- 'python3 (>=' | cut -d '(' -f 2- | cut -d ')' -f 1 | cut -d ' ' -f 2 | cut -d . -f 2)"
          [ "$min_version_debian" -ge "$min_version_otel" ] || sed -i "s/python3 (>= $min_version_debian/python3 (>= 3.$min_version_otel/g" meta/debian/control
          min_version_rpm="$(cat meta/rpm/*.spec | grep '^Requires:' | tr ',' '\n' | grep -F -- 'python3 >=' | cut -d '=' -f 2- | cut -d . -f 2)"
          [ "$min_version_debian" -ge "$min_version_otel" ] || sed -i "s/python3 >= $min_version_rpm/python3 >= 3.$min_version_otel/g" meta/rpm/*.spec
      - id: open-pr
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
          commit-message: "Renovate python dependency"
          base: main
          branch: "renovate-manual/debian-python"
          title: "Update Debian Python Dependency"
          body: |
            (this PR is automatically generated)
          delete-branch: true
      - run: sleep 60 # make sure PR state is updated and API can catch up
        if: steps.open-pr.outputs.pull-request-number != null
      - uses: peter-evans/enable-pull-request-automerge@v3.0.0
        if: steps.open-pr.outputs.pull-request-number != null
        with:
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
          pull-request-number: ${{ steps.open-pr.outputs.pull-request-number }}
          merge-method: squash
  renovate-test-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    steps:
      - uses: plengauer/opentelemetry-github/actions/instrument/job@v5.30.1
        env:
          OTEL_EXPORTER_OTLP_ENDPOINT: ${{ secrets.OTEL_EXPORTER_OTLP_ENDPOINT }}
          OTEL_EXPORTER_OTLP_HEADERS: ${{ secrets.OTEL_EXPORTER_OTLP_HEADERS }}
        with:
          secrets_to_redact: '["${{ github.token }}","${{ secrets.ACTIONS_GITHUB_TOKEN }}"]'
      - uses: actions/checkout@v5.0.0
      - run: |
          curl -s --fail https://api.launchpad.net/devel/debian/series > /tmp/launchpad.debian.json
          oldest="debian:$(jq < /tmp/launchpad.debian.json '.entries[] | select(.active == true) | select(.status == "Supported") | .name' -r | head -n 2 | tail -n 1)"
          stable="debian:$(jq < /tmp/launchpad.debian.json '.entries[] | select(.active == true) | select(.status == "Supported") | .name' -r | head -n 1)"
          latest="debian:$(jq < /tmp/launchpad.debian.json '.entries[] | select(.active == true) | select(.status == "Current Stable Release") | .name' -r)"
          dev="debian:$(jq < /tmp/launchpad.debian.json '.entries[] | select(.active == true) | select(.status == "Active Development" or .status == "Pre-release Freeze") | .name' -r | head -n 1)"
          cat .github/workflows/images.json | jq ".debian.oldest = \"$oldest\"" | jq ".debian.stable = \"$stable\"" | jq ".debian.latest = \"$latest\"" | jq ".debian.dev = \"$dev\"" > /tmp/images.json && cat < /tmp/images.json > .github/workflows/images.json
          cat .github/workflows/images.json | jq ".\"debian-slim\".oldest = \"$oldest-slim\"" | jq ".\"debian-slim\".stable = \"$stable-slim\"" | jq ".\"debian-slim\".latest = \"$latest-slim\"" | jq ".\"debian-slim\".dev = \"$dev-slim\"" > /tmp/images.json && cat < /tmp/images.json > .github/workflows/images.json
      - run: |
          curl -s --fail https://api.launchpad.net/devel/ubuntu/series > /tmp/launchpad.ubuntu.json
          oldest="ubuntu:$(jq < /tmp/launchpad.ubuntu.json '.entries[] | select(.active == true) | select(.status == "Supported") | .name' -r | head -n 2 | tail -n 1)"
          stable="ubuntu:$(jq < /tmp/launchpad.ubuntu.json '.entries[] | select(.active == true) | select(.status == "Supported") | .name' -r | head -n 1)"
          latest="ubuntu:$(jq < /tmp/launchpad.ubuntu.json '.entries[] | select(.active == true) | select(.status == "Current Stable Release") | .name' -r)"
          dev="ubuntu:$(jq < /tmp/launchpad.ubuntu.json '.entries[] | select(.active == true) | select(.status == "Active Development" or .status == "Pre-release Freeze") | .name' -r | head -n 1)"
          cat .github/workflows/images.json | jq ".ubuntu.oldest = \"$oldest\"" | jq ".ubuntu.stable = \"$stable\"" | jq ".ubuntu.latest = \"$latest\"" | jq ".ubuntu.dev = \"$dev\"" > /tmp/images.json && cat < /tmp/images.json > .github/workflows/images.json
      - run: |
          curl -s --fail https://fedoraproject.org/releases.json > /tmp/fedora_releases.json
          oldest="fedora:$(jq < /tmp/fedora_releases.json '.[].version' -r | cut -d ' ' -f 1 | sort -u | tail -n 2 | head -n 1)"
          stable="fedora:$(jq < /tmp/fedora_releases.json '.[].version' -r | cut -d ' ' -f 1 | sort -u | tail -n 1)"
          latest=fedora:rawhide
          dev=fedora:rawhide
          cat .github/workflows/images.json | jq ".fedora.oldest = \"$oldest\"" | jq ".fedora.stable = \"$stable\"" | jq ".fedora.latest = \"$latest\"" | jq ".fedora.dev = \"$dev\"" > /tmp/images.json && cat < /tmp/images.json > .github/workflows/images.json
      - run: |
          curl -s --fail https://endoflife.date/api/v1/products/opensuse > /tmp/opensuse.json
          oldest="opensuse/leap:$(jq < /tmp/opensuse.json '.result.releases[] | select(.isEol == false) | .name' -r | tail -n 1)"
          stable="opensuse/leap:$(jq < /tmp/opensuse.json '.result.releases[] | select(.isEol == false) | .name' -r | head -n 1)"
          latest=opensuse/tumbleweed:latest
          dev=opensuse/tumbleweed:latest
          cat .github/workflows/images.json | jq ".opensuse.oldest = \"$oldest\"" | jq ".opensuse.stable = \"$stable\"" | jq ".opensuse.latest = \"$latest\"" | jq ".opensuse.dev = \"$dev\"" > /tmp/images.json && cat < /tmp/images.json > .github/workflows/images.json
      - run: |
          curl -s --fail https://endoflife.date/api/v1/products/rhel > /tmp/rhel.json
          oldest="redhat/ubi$(jq < /tmp/rhel.json '.result.releases[] | select(.isEol == false) | .name' -r | tail -n 1):latest"
          stable="redhat/ubi$(jq < /tmp/rhel.json '.result.releases[] | select(.isEol == false) | .name' -r | head -n 2 | tail -n 1):latest"
          latest="redhat/ubi$(jq < /tmp/rhel.json '.result.releases[] | select(.isEol == false) | .name' -r | head -n 1):latest"
          dev="$latest"
          cat .github/workflows/images.json | jq ".rhel.oldest = \"$oldest\"" | jq ".rhel.stable = \"$stable\"" | jq ".rhel.latest = \"$latest\"" | jq ".rhel.dev = \"$dev\"" > /tmp/images.json && cat < /tmp/images.json > .github/workflows/images.json
      - run: |
          curl -s --fail https://endoflife.date/api/v1/products/alpine-linux > /tmp/alpine.json
          oldest="alpine:$(jq < /tmp/alpine.json '.result.releases[] | select(.isEol == false) | .name' -r | tail -n 1)"
          stable="alpine:$(jq < /tmp/alpine.json '.result.releases[] | select(.isEol == false) | .name' -r | head -n 2 | tail -n 1)"
          latest="alpine:$(jq < /tmp/alpine.json '.result.releases[] | select(.isEol == false) | .name' -r | head -n 1)"
          dev="$latest"
          cat .github/workflows/images.json | jq ".alpine.oldest = \"$oldest\"" | jq ".alpine.stable = \"$stable\"" | jq ".alpine.latest = \"$latest\"" | jq ".alpine.dev = \"$dev\"" > /tmp/images.json && cat < /tmp/images.json > .github/workflows/images.json
      - id: open-pr
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
          commit-message: "Update test images"
          base: main
          branch: "renovate-manual/test-images"
          title: "Update Test Images"
          body: |
            (this PR is automatically generated)
          delete-branch: true
      - run: sleep 60 # make sure PR state is updated and API can catch up
        if: steps.open-pr.outputs.pull-request-number != null
      - uses: peter-evans/enable-pull-request-automerge@v3.0.0
        if: steps.open-pr.outputs.pull-request-number != null
        with:
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
          pull-request-number: ${{ steps.open-pr.outputs.pull-request-number }}
          merge-method: squash
  renovate-license:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    steps:
      - uses: plengauer/opentelemetry-github/actions/instrument/job@v5.30.1
        env:
          OTEL_EXPORTER_OTLP_ENDPOINT: ${{ secrets.OTEL_EXPORTER_OTLP_ENDPOINT }}
          OTEL_EXPORTER_OTLP_HEADERS: ${{ secrets.OTEL_EXPORTER_OTLP_HEADERS }}
        with:
          secrets_to_redact: '["${{ github.token }}","${{ secrets.ACTIONS_GITHUB_TOKEN }}"]'
      - uses: actions/checkout@v5.0.0
      - run: |
          sed -i "s/$(($(date +%Y) - 1))/$(date +%Y)/g" LICENSE
      - id: open-pr
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
          commit-message: "Renovate license date"
          base: main
          branch: "renovate-manual/license"
          title: "Update License Date"
          body: |
            (this PR is automatically generated)
          delete-branch: true
      - run: sleep 60 # make sure PR state is updated and API can catch up
        if: steps.open-pr.outputs.pull-request-number != null
      - uses: peter-evans/enable-pull-request-automerge@v3.0.0
        if: steps.open-pr.outputs.pull-request-number != null
        with:
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
          pull-request-number: ${{ steps.open-pr.outputs.pull-request-number }}
          merge-method: squash
